name: lint_test_build_publish_release_sync_npm_textmod_node_sdk

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Select the version to publish'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

env:
  PACKAGE_NAME: 'textmod-node'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  GH_PAT: ${{ secrets.GH_PAT }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  TEXTMOD_AUTH_TOKEN: ${{ secrets.TEXTMOD_AUTH_TOKEN }}

jobs:
  lint_test_build:
    strategy:
      matrix:
        node-version: [14, 16, 18, 20]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@textmod'
        env:
            NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm test -- --coverage --coverageReporters=lcov --coverageReporters=text-lcov

      - name: Build artifact
        run: npm run build


  version_package_publish_release:

    runs-on: ubuntu-latest
    needs: lint_test_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ env.GH_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@textmod'
        env:
            NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Bump version
        run: |
          npm version patch --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION >> $GITHUB_ENV"

      - name: Create commit
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Bump version to $VERSION" || (git reset HEAD~1 && exit 1)

      - name: Create tag
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          git tag $VERSION || (git tag -d $VERSION && exit 1)
          git push origin $VERSION || (git push --delete origin $VERSION && exit 1)

      - name: Publish to GitHub Packages
        run: |
          npm publish --access public --@textmod:registry=https://npm.pkg.github.com/

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')

      - name: Sync with NPM
        uses: JS-DevTools/npm-publish@v2
        with:
          registry: 'https://registry.npmjs.org'
          token: ${{ env.NPM_TOKEN }}
          access: 'public'

      - name: Error handling
        if: ${{ failure() }}
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo "An error occurred"
          git reset HEAD~1
          git tag -d $VERSION
          git push --delete origin $VERSION
          npm unpublish @textmod/$PACKAGE_NAME@$VERSION --registry=https://npm.pkg.github.com/
          npm unpublish $PACKAGE_NAME@$VERSION --registry=https://registry.npmjs.org/ --force --token $NPM_TOKEN
          exit 1
